name: Deploy Laravel Project on push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Laravel Project
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      # Step 3: Install Composer dependencies
      - name: Install Composer Dependencies
        run: |
          composer install --no-scripts --no-progress --no-suggest
          composer dump-autoload --optimize

      # Step 4: Setup SSH for deployment
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 154.53.42.124 >> ~/.ssh/known_hosts

      # Step 5: Test SSH connection
      - name: Test SSH Connection
        run: ssh -o StrictHostKeyChecking=no trendi-apiart@154.53.42.124 "echo 'SSH connection successful!'"

      # Step 6: Remove old cached files from the server (handling permissions)
      - name: Remove Cached Files
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no trendi-apiart@154.53.42.124 "sudo rm -rf /home/trendi-apiart/htdocs/apiart.trendi.ai/storage/framework/cache/data/*"

      # Step 7: Generate .env file
      - name: Generate .env file
        run: |
          echo "APP_NAME=Laravel" > .env
          echo "APP_ENV=production" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "APP_URL=https://apiart.trendi.ai" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "MAIL_MAILER=smtp" >> .env
          echo "MAIL_HOST=smtp.gmail.com" >> .env
          echo "MAIL_PORT=465" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "MAIL_ENCRYPTION=tls" >> .env
          echo "QUEUE_CONNECTION=database" >> .env
          echo "SESSION_DRIVER=file" >> .env
          echo "SESSION_LIFETIME=360" >> .env

      # Step 8: Build the frontend
      - name: Setup Node.js
        uses: actions/setup-node@v2

      - name: Install Node.js Dependencies
        run: npm install

      - name: Build Frontend Assets
        run: npm run build

      # Step 9: Deploy the application using rsync
      - name: Deploy Files
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" rsync -avz --no-perms --omit-dir-times \
            --exclude=".git/" \
            --exclude="node_modules/" \
            --exclude="vendor/" \
            --exclude=".env.example" \
            ./ trendi-apiart@154.53.42.124:${{ secrets.DIRECTION }}

      # Step 10: Set directory permissions on the server
      - name: Set Directory Permissions
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no trendi-apiart@154.53.42.124 "sudo chmod -R 775 /home/trendi-apiart/htdocs/apiart.trendi.ai/storage /home/trendi-apiart/htdocs/apiart.trendi.ai/bootstrap/cache"

      # Step 11: Run artisan commands
      - name: Run Artisan Commands
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no trendi-apiart@154.53.42.124 << 'EOF'
          cd /home/trendi-apiart/htdocs/apiart.trendi.ai
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          php artisan migrate --force
          EOF
